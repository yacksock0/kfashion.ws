<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.aetherit.kfashion.ws.repository.mapper.KfashionUserInfoMapper">
    <resultMap id="kfashionUserInfoResultMap" type="KfashionUserInfo">
        <id property="id"                       column="id" />
        <result property="password"             column="password" />
        <result property="name"                 column="name" />
        <result property="birth"                column="birth" />
        <result property="gender"               column="gender" />
        <result property="email"                column="email" />
        <result property="phone"                column="phone" />
        <result property="groupNo"              column="group_no" />
        <result property="isAdmin"              column="is_admin" />
        <result property="isApproved"           column="is_approved" />
        <result property="authorityNo"          column="authority_no" />
        <result property="groupAdmin"           column="group_admin" />
        <result property="createdDatetime"      column="created_datetime" />
        <result property="updatedDatetime"      column="updated_datetime" />
    </resultMap>

    <insert id="createNewUser" parameterType="KfashionUserInfo">
      INSERT INTO kfashion_user_info (
            id,
            password,
            name,
            email,
            phone,
            is_admin,
            is_approved,
            created_datetime,
            updated_datetime
        ) VALUES (
            #{id},
            #{password},
            #{name},
            #{email},
            #{phone},
            #{isAdmin},
            #{isApproved},
            NOW(),
            NOW()
        )
    </insert>

    <select id="checkUser" resultType="int" parameterType="KfashionUserInfo">
      select count(id) from kfashion_user_info
      where id=#{id}
    </select>

    <select id="selectUsersWhereType" resultMap="kfashionUserInfoResultMap">
        SELECT id,
               password,
               name,
               is_admin,
               is_approved,
               created_datetime,
               updated_datetime
        FROM kfashion_user_info
        WHERE is_admin = #{isAdmin}
        ORDER BY created_datetime DESC
    </select>

    <select id="getGroupUser" parameterType="String" resultType="int">
        SELECT
               COUNT(kfashion_user_group_admin.user_id) AS group_admin
        FROM   kfashion_user_info
        RIGHT JOIN kfashion_user_group_admin ON kfashion_user_info.id = kfashion_user_group_admin.user_id
        WHERE id = #{value}
    </select>

    <select id="selectUser" parameterType="String" resultMap="kfashionUserInfoResultMap">
        SELECT
       		   kfashion_user_info.id,
        	   kfashion_user_info.email,
               kfashion_user_info.password,
               kfashion_user_info.name,
               kfashion_user_info.phone,
               kfashion_user_info.group_no,
               kfashion_user_info.is_admin,
               kfashion_user_info.is_approved,
               kfashion_user_group_authority.authority_no,
               kfashion_user_info.created_datetime,
               kfashion_user_info.updated_datetime
        FROM   kfashion_user_info
        LEFT JOIN kfashion_user_group_authority ON kfashion_user_info.group_no = kfashion_user_group_authority.group_no
        WHERE id = #{value}
    </select>

    <select id="selectAdmin" parameterType="String" resultMap="kfashionUserInfoResultMap">
        SELECT
       		   kfashion_user_info.id,
        	   kfashion_user_info.email,
               kfashion_user_info.password,
               kfashion_user_info.name,
               kfashion_user_info.phone,
               kfashion_user_info.group_no,
               kfashion_user_info.is_admin,
               kfashion_user_info.is_approved,
               kfashion_user_group_authority.authority_no,
               COUNT(kfashion_user_group_admin.user_id) AS group_admin,
               kfashion_user_info.created_datetime,
               kfashion_user_info.updated_datetime
        FROM   kfashion_user_info
        LEFT JOIN kfashion_user_group_authority ON kfashion_user_info.group_no = kfashion_user_group_authority.group_no
        RIGHT JOIN kfashion_user_group_admin ON kfashion_user_info.id = kfashion_user_group_admin.user_id
        WHERE id = #{value}
    </select>

    <select id="selectUserByEmail" parameterType="String" resultMap="kfashionUserInfoResultMap">
        SELECT id,
               email,
               password,
               name,
               is_admin,
               is_approved,
               created_datetime,
               updated_datetime
        FROM   kfashion_user_info
        WHERE  email = #{email}
    </select>

    <select id="selectUserById" parameterType="String" resultMap="kfashionUserInfoResultMap">
          SELECT id,
               email,
               password,
               name,
               is_admin,
               is_approved,
               created_datetime,
               updated_datetime
        FROM   kfashion_user_info
        WHERE  id = #{id}
    </select>

    <update id="updateAuthUser" parameterType="String">
        UPDATE kfashion_user_info
        SET
        is_approved = 'Y'
        WHERE id=#{id}
    </update>

    <select id="selectUserList" resultMap="kfashionUserInfoResultMap">
        SELECT *
        FROM kfashion_user_info
        WHERE group_no IS NULL
        AND is_approved = 'Y'
        AND id NOT IN('admin')
        ORDER BY created_datetime
    </select>

    <update id="updateUserGroup" parameterType="map">
        UPDATE kfashion_user_info
        SET
        group_no=#{groupNo}
        WHERE
        id=#{id}
    </update>

    <select id="selectGroupAdminList" resultMap="kfashionUserInfoResultMap">
        SELECT
        kfashion_user_info.*
        FROM kfashion_user_group_admin
        LEFT JOIN kfashion_user_info
        ON kfashion_user_group_admin.group_no = kfashion_user_info.group_no;
    </select>

    <select id="selectGroupUserList" resultMap="kfashionUserInfoResultMap" parameterType="hashMap">
        SELECT *
        FROM kfashion_user_info
        WHERE group_no= #{groupNo}
        AND id NOT IN
        <foreach collection="adminIdList" item="adminIdList" index="index" separator="," open="(" close=")">
            (#{adminIdList})
        </foreach>
        ORDER BY created_datetime DESC
     </select>

    <insert id="createGroupUser" parameterType="KfashionUserInfo">
        INSERT
        INTO kfashion_user_info (
            id,
            password,
            name,
            group_no,
            is_approved,
            created_datetime,
            updated_datetime
        ) VALUE (
           #{id},
           #{password},
           #{name},
           #{groupNo},
           #{isApproved},
           NOW(),
           NOW()
        )
    </insert>

    <delete id="deleteGroupAdminUser" parameterType="KfashionUserInfo">
        DELETE FROM kfashion_user_info
        WHERE id=#{id}
    </delete>

    <delete id="deleteGroupUser" parameterType="KfashionUserInfo">
        DELETE FROM kfashion_user_info
        WHERE id=#{id}
    </delete>

    <update id="updateGroupUser">
        UPDATE kfashion_user_info
        SET
        password = #{password},
        name = #{name},
        updated_datetime = NOW()
        WHERE id = #{id}
    </update>

    <update id="updateGroupUserName">
        UPDATE kfashion_user_info
        SET
        name = #{name},
        updated_datetime = NOW()
        WHERE id = #{id}
    </update>


</mapper>
